apiVersion: v1
kind: Namespace
metadata:
  name: gitlab
---
apiVersion: v1
kind: Secret
metadata:
  name: gitlab-cert
  namespace: gitlab
data:
  ca-certificates.crt: ... # Edit: base64 CERTIFICATE string, cert can be download from https://git.yourdomain.com
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gitlab-runner
  namespace: gitlab
rules:
- apiGroups: [""]
  resources: ["pods", "pods/exec", "secrets"]
  verbs: ["get", "list", "watch", "create", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitlab-runner
  namespace: gitlab
subjects:
  - kind: ServiceAccount
    name: gitlab-runner
    namespace: gitlab
roleRef:
  kind: Role
  name: gitlab-runner
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: gitlab-runner
  namespace: kube-system
rules:
  - apiGroups: ["extensions", "apps"]
    resources: ["daemonsets", "deployments", "replicasets"]
    verbs: ["get", "list", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: gitlab-runner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitlab-runner
subjects:
  - kind: ServiceAccount
    name: default
    namespace: gitlab
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: gitlab-runner
  namespace: gitlab
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: gitlab
  name: gitlab-runner
data:
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_SSL_NO_VERIFY: "true"
  REGISTER_NON_INTERACTIVE: "true"
  CI_SERVER_URL: https://git.yourdomain.com/ # Edit
  RUNNER_PRE_CLONE_SCRIPT: echo 123.123.123.123 git.yourdomain.com >> /etc/hosts && git config --global http.sslVerify false # Edit if necessary
  DOCKER_HOST: tcp://docker:2375
  DOCKER_DRIVER: overlay2
  RUNNER_EXECUTOR: kubernetes
  RUNNER_REQUEST_CONCURRENCY: "4"
  KUBERNETES_NAMESPACE: gitlab
  KUBERNETES_IMAGE: docker:dind
  KUBERNETES_PRIVILEGED: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab-runner
  namespace: gitlab
  labels:
    app: gitlab-runner
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gitlab-runner
  template:
    metadata:
      labels:
        app: gitlab-runner
    spec:
      serviceAccount: gitlab-runner
      hostAliases:
      - ip: 123.123.123.123 # Edit if necessary
        hostnames:
          - git.yourdomain.com # Edit if necessary
      initContainers:
        - name: init-runner
          image: gitlab/gitlab-runner:latest
          command:
            - sh
            - -c
            - "/entrypoint unregister --all-runners; /entrypoint register"
          envFrom:
            - configMapRef:
                name: gitlab-runner
          env:
            - name: RUNNER_NAME
              value: ...  # Edit
            - name: REGISTRATION_TOKEN
              value: ...  # Edit
          volumeMounts:
            - mountPath: /etc/gitlab-runner
              name: config
            - mountPath: /etc/ssl/certs
              name: cacerts
              readOnly: true
        - name: init-runner-volume
          image: docker:dind
          command: ["sh", "-c"]
          # Append hostpath mount to configuration because there is no env variable for it
          # https://gitlab.com/gitlab-org/gitlab-ci-multi-runner/issues/2578
          args:
            - |
              cat <<EOF >> /etc/gitlab-runner/config.toml
                [[runners.kubernetes.volumes.host_path]]
                name = "docker-sock"
                mount_path = "/var/run/docker.sock"
                host_path = "/var/run/docker.sock"
                [[runners.kubernetes.volumes.host_path]]
                name = "kubectl"
                mount_path = "/usr/bin/kubectl"
                host_path = "/usr/bin/kubectl"
              EOF
          volumeMounts:
            - mountPath: /etc/gitlab-runner
              name: config
      containers:
        - name: gitlab-runner
          image: gitlab/gitlab-runner:latest
          imagePullPolicy: Always
          args:
            - run
          volumeMounts:
            - mountPath: /etc/gitlab-runner
              name: config
            - mountPath: /etc/ssl/certs
              name: cacerts
              readOnly: true
          lifecycle:
            preStop:
              exec:
                command:
                - sh
                - -c
                - "/entrypoint unregister --all-runners"
        - name: dind
          image: docker:dind
          securityContext:
            privileged: true
          volumeMounts:
            - name: dind-storage
              mountPath: /var/lib/docker
      volumes:
        - secret:
            secretName: gitlab-cert
            defaultMode: 256
          name: cacerts
        - name: config
          emptyDir: {}
        - name: dind-storage
          emptyDir: {}
      restartPolicy: Always
